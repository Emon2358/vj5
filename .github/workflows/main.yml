name: Niconico Video Glitch and Release (Separate Script)

on:
  workflow_dispatch:
    inputs:
      niconico_video_url:
        description: 'データモッシュしたいニコニコ動画のURL'
        required: true
        default: 'https://www.nicovideo.jp/watch/sm9'
      glitches_count:
        description: 'グリッチの回数 (整数)'
        required: false
        default: '900'
      glitch_strength_bytes:
        description: 'グリッチの強度 (バイト数)'
        required: false
        default: '99999'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install Python dependencies and FFmpeg
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg
        pip install yt-dlp
        # datamosh_script.py が追加のPythonライブラリを必要とする場合、ここにインストールコマンドを追加

    - name: Run Datamosh Script
      id: run_datamosh_script # このステップのID
      run: |
        # Pythonスクリプトに引数を渡して実行
        # github.event.inputs から入力値を取得して渡す
        python datamosh_script.py \
          "${{ github.event.inputs.niconico_video_url }}" \
          "${{ github.event.inputs.glitches_count }}" \
          "${{ github.event.inputs.glitch_strength_bytes }}"
      # Pythonスクリプトが出力する値をキャプチャする (::set-output)
      # set-outputは非推奨になりましたが、古いアクションとの互換性のため残す場合があります
      # 新しい方法はjob.outputsを使用することですが、今回のケースでは直接ファイルをアップロードするため
      # Pythonスクリプトの出力は不要かもしれません。
      # 必要であれば、Pythonスクリプトで output_filename を返すように変更し、
      # ここで `outputs: glitched_output_file: ${{ steps.run_datamosh_script.outputs.glitched_output_file }}` を定義します。
      # 今回は、Pythonスクリプトが 'glitched_video.mp4' を出力することを前提とし、直接参照します。

    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name }} # リリースにはタグが必要なので、手動実行でもタグをプッシュすることを推奨
        name: Release ${{ github.ref_name }} - Glitched Video
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Glitched Video to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./glitched_video.mp4 # datamosh_script.py が生成するファイル名を直接指定
        asset_name: glitched_video-${{ github.run_id }}.mp4 # 実行IDをファイル名に含めて一意にする
        asset_content_type: video/mp4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
